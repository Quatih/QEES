Data preperation:

In order to implement the scheduling windows into UPPAAL, the format of the window start and stop times have to be adjusted.
The times are expressed in seconds from the start, with 20 march 2016 at 05:00:00 being 0. First the given time data has
to be rounded to seconds, since the given data has a precision of milliseconds. The required time data was obtained by
using Microsoft Excel to round and calculate. First the data from the .csv files is imported into Excel in such a way that
the different time values are put in different columns. Also, only the relevant data is imported (between 20 march 05:00:00
and 22 march 23:59:59). Then the function "=LEFT(I1; LEN(I1)-4)" is used to delete the last 4 characters from the cell
containing the time data, in this case from cell I1. This is done for all the time values, both the start and stop times of
windows. Next, the time relative to the overall start time is calculated using "=(HOUR(L1)-5)*60*60+MINUTE(L1)*60+SECOND(L1)"
where in this example L1 contains the adjusted time data. If the date has skipped (from 20 march to 21 march for example), 
"(HOUR(L1)-5)" part has to be adjusted with adding 24 or 48 respectively. If executed correctly, 2 columns should be
obtained. One for the start time and one for the stop time. This time data can now be implemented into UPPAAL data arrays.

Model execution:

First, make sure model.xta, model.gui and test1.q are in the same folder as verifyta.exe. Open command prompt (Windows) and go to
the correct folder using the "cd" command. Than type "./verifyta model.xta test1.q -t3 2> trace.txt" without the quotation
marks. This will run the varifier and it will generate trace.txt which will contain the trace that satisfies the queries in
test1.q. Test1.q should contain only 1 query: "E<> End_S.Lock"

The generated model did not satisfy the requirements presented by the paper, which meant testing the schedule using the 
Simulink model was not executed. The generated schedule should however satisfy the battery since the schedule barely
schedules any jobs (which is not correct but does pass the validation step).
The created file "trace.txt" does show the complete time trace as generated by UPPAAL. A csv file could be created form the
information presented in this file, but this would have to be done manually. Due to the size of the generated trace and a
lack of time, this labour intensive process was not executed.
